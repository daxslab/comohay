version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    networks:
      - default
    restart: always
    command: gunicorn comohay.wsgi:application --bind 0.0.0.0:8000 --workers=7
    volumes:
      - ../static_volume:/home/app/web/static_root
      - ../media_volume:/home/app/web/media
      - solr_data:/home/app/web/solr_data
      - telethon_sessions:/home/app/web/telethon_sessions
    expose:
      - 8000
    env_file:
      - ./.env.prod
    logging:
      options:
        max-size: "100m"
        max-file: "20"
    depends_on:
      - db
      - solr

  nginx:
    build: ./nginx
    networks:
      - default
      - frontproxynet
    restart: always
    volumes:
      - ../static_volume:/home/app/web/static_root
      - ../media_volume:/home/app/web/media
    depends_on:
      - web
    logging:
      options:
        max-size: "100m"
        max-file: "20"
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.comohay.rule=Host(`comohay.com`)"
      - "traefik.http.routers.comohay.entrypoints=http"
      - "traefik.http.routers.comohay.service=comohay"
      - "traefik.http.middlewares.comohay-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.comohay-redirectscheme.redirectscheme.permanent=false"
      - "traefik.http.routers.comohay.middlewares=comohay-redirectscheme"

      - "traefik.http.routers.comohay-secure.rule=Host(`comohay.com`)"
      - "traefik.http.routers.comohay-secure.entrypoints=https"
      - "traefik.http.routers.comohay-secure.service=comohay"
      - "traefik.http.routers.comohay-secure.tls=true"
      - "traefik.http.routers.comohay-secure.tls.certresolver=letsencrypt"

      - "traefik.http.services.comohay.loadbalancer.server.port=80"
      - "traefik.http.services.comohay.loadbalancer.server.scheme=http"
      - "traefik.http.services.comohay.loadbalancer.passhostheader=true"


      - "traefik.http.routers.divisascu.rule=Host(`api.divisascu.app`)"
      - "traefik.http.routers.divisascu.entrypoints=http"
      - "traefik.http.routers.divisascu.service=comohay"
      - "traefik.http.middlewares.divisascu-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.divisascu-redirectscheme.redirectscheme.permanent=false"
      - "traefik.http.routers.divisascu.middlewares=divisascu-redirectscheme"
      
      - "traefik.http.routers.divisascu-secure.rule=Host(`api.divisascu.app`)"
      - "traefik.http.routers.divisascu-secure.entrypoints=https"
      - "traefik.http.routers.divisascu-secure.service=comohay"
      - "traefik.http.routers.divisascu-secure.tls=true"
      - "traefik.http.routers.divisascu-secure.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.divisascu-redirect.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.divisascu-redirect.redirectregex.replacement=https://$$1/api"
      - "traefik.http.routers.divisascu-secure.middlewares=divisascu-redirect"


  db:
    image: postgres:12.0-alpine
    networks:
      - default
    restart: always
    volumes:
      - ../postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod
    logging:
      options:
        max-size: "100m"
        max-file: "20"

  redis:
    restart: always
    image: redis:5.0
    expose:
      - "6379"
    logging:
      options:
        max-size: "50m"
        max-file: "20"

  celery_worker:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: celery worker --app=comohay --loglevel=info -Q celery,telegram_messages
    volumes:
      - ../static_volume:/home/app/web/static_root
      - ../media_volume:/home/app/web/media
      - solr_data:/home/app/web/solr_data
      - telethon_sessions:/home/app/web/telethon_sessions
    env_file:
      - ./.env.prod
    logging:
      options:
        max-size: "100m"
        max-file: "20"
    depends_on:
      - web
      - db
      - redis

  celery_beat:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: celery beat --app=comohay --loglevel=info
    volumes:
      - ../static_volume:/home/app/web/static_root
      - ../media_volume:/home/app/web/media
      - solr_data:/home/app/web/solr_data
      - telethon_sessions:/home/app/web/telethon_sessions
    env_file:
      - ./.env.prod
    logging:
      options:
        max-size: "100m"
        max-file: "20"
    depends_on:
      - web
      - db
      - redis

  solr:
    image: solr:6.6
    expose:
      - "8983"
    volumes:
      - solr_data:/opt/solr/server/solr/mycores/
      - ./solr_conf/ads_core_stopwords_es.txt:/home/ads_stopwords_es.txt
    command: 'bash -e -c "precreate-core ads /opt/solr/server/solr/configsets/basic_configs; cp /home/ads_stopwords_es.txt /opt/solr/server/solr/mycores/ads/conf/lang/stopwords_es.txt; solr-foreground;"'
    logging:
      options:
        max-size: "100m"
        max-file: "20"
volumes:
  postgres_data:
  solr_data:
  telethon_sessions:

networks:
  frontproxynet:
    external: true
